(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{220:function(e,n,t){"use strict";t.r(n);var a=t(28),i=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_5-配置keepalived双主热备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-配置keepalived双主热备"}},[e._v("#")]),e._v(" 5.配置Keepalived双主热备")]),e._v(" "),t("h2",{attrs:{id:"_1-进入主节点然后-vim-etc-keepalived-keepalived-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-进入主节点然后-vim-etc-keepalived-keepalived-conf"}},[e._v("#")]),e._v(" 1.进入主节点然后 "),t("code",[e._v("vim /etc/keepalived/keepalived.conf")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('vrrp_script check_nginx_alive {\n    script "/etc/keepalived/check_nginx_alive_or_not.sh"\n    interval 2 # 每隔两秒运行上一行脚本\n    weight 10 # 如果脚本运行成功，则升级权重+10\n}\n\n# 计算机节点\nvrrp_instance VI_1 {\n    # 表示的状态，当前的192.168.64.131的nginx的主节点\n    # 主节点：MASTER,备用机：BACKUP\n    state MASTER\n    # 当前实例绑定的网卡\n    interface ens33\n    # 保证主备节点一致\n    virtual_router_id 51\n    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER\n    priority 100\n    # 主备之间同步检查的时间间隔，默认1s\n    advert_int 1\n    # 认证授权的密码，防止非法节点的进入\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n\n    track_script {\n        check_nginx_alive   # 追踪 nginx 脚本\n    }\n\n    virtual_ipaddress {\n        192.168.64.121\n    }\n}\n\n\nvrrp_instance VI_2 {\n    state BACKUP\n    interface ens33\n    virtual_router_id 52\n    priority 80\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n\n    virtual_ipaddress {\n        192.168.64.122\n    }\n}\n\n')])])]),t("h2",{attrs:{id:"_2-进入主节点然后-vim-etc-keepalived-keepalived-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-进入主节点然后-vim-etc-keepalived-keepalived-conf"}},[e._v("#")]),e._v(" 2.进入主节点然后 "),t("code",[e._v("vim /etc/keepalived/keepalived.conf")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("global_defs {\n   # 路由id：当前安装keepalived节点主机的标识符，全局唯一标识符\n   router_id keep_192.168.64.132\n}\n\n# 计算机节点\nvrrp_instance VI_1 {\n    # 表示的状态，当前的192.168.64.131的nginx的主节点\n    # 主节点：MASTER,备用机：BACKUP\n    state BACKUP\n    # 当前实例绑定的网卡\n    interface ens33\n    # 保证主备节点一致\n    virtual_router_id 51\n    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER\n    priority 80\n    # 主备之间同步检查的时间间隔，默认1s\n    advert_int 1\n    # 认证授权的密码，防止非法节点的进入\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.64.121\n    }\n}\n\nvrrp_instance VI_2 {\n    state MASTER\n    interface ens33\n    virtual_router_id 52\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.64.122\n    }\n}\n")])])]),t("h2",{attrs:{id:"_3-分别重启两台服务器的keepalived服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-分别重启两台服务器的keepalived服务"}},[e._v("#")]),e._v(" 3.分别重启两台服务器的keepalived服务")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl restart keepalived.service\n")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);