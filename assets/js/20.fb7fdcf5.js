(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{232:function(n,e,t){"use strict";t.r(e);var a=t(28),r=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_5-搭建keepalived-lvs-nginx高可用集群负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-搭建keepalived-lvs-nginx高可用集群负载均衡"}},[n._v("#")]),n._v(" 5.搭建Keepalived+Lvs+Nginx高可用集群负载均衡")]),n._v(" "),t("h2",{attrs:{id:"准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[n._v("#")]),n._v(" 准备工作")]),n._v(" "),t("p",[t("code",[n._v("1.准备两台nginx服务器")])]),n._v(" "),t("p",[n._v("​\t"),t("code",[n._v("1.1两台nginx服务器，一台Mater,另一台Backup")])]),n._v(" "),t("p",[t("code",[n._v("2.准备两台Lvs服务器")])]),n._v(" "),t("p",[n._v("​\t"),t("code",[n._v("2.1两台Lvs服务器，一台Master，另一台Backup")])]),n._v(" "),t("h2",{attrs:{id:"_1-配置第一台主lvs服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置第一台主lvs服务器"}},[n._v("#")]),n._v(" 1.配置第一台主Lvs服务器")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("Keepalived配置")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("! Configuration File for keepalived\nglobal_defs {\n   # 路由id：当前安装keepalived节点主机的标识符，全局唯一标识符\n   router_id LVS_192.168.64.133\n}\n\n\n# 计算机节点\nvrrp_instance VI_1 {\n    # 表示的状态，当前的192.168.64.133的nginx的主节点\n    # 主节点：MASTER,备用机：BACKUP\n    state MASTER\n    # 当前实例绑定的网卡\n    interface ens33\n    # 保证主备节点一致\n    virtual_router_id 55\n    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER\n    priority 100\n    # 主备之间同步检查的时间间隔，默认1s\n    advert_int 1\n    # 认证授权的密码，防止非法节点的进入\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n\n    virtual_ipaddress {\n        192.168.64.120\n    }\n}\n\n# 配置集群地址访问的IP+端口，端口和nginx保持一致，都是80\nvirtual_server 192.168.64.120 80 {\n        # 健康检查的时间，单位：秒\n        delay_loop 6\n        # 配置负载均衡的算法，默认是轮询\n        lb_algo rr\n        # 设置LVS的模式 NAT|TUN|DR\n        lb_kind DR\n        # 设置会话持久化的事件\n        persistence_timeout 10\n        # 协议 -t\n        protocol TCP\n\n        # 负载均衡的真实服务器，也就是nginx节点的具体的真实ip地址\n        real_server 192.168.64.131 80 {\n                # 轮询的默认权重配比设置为1\n                weight 1\n                # 设置健康检查\n                TCP_CHECK {\n                    # 检查的80端口\n                    connect_port 80\n                    # 超时时间 2s\n                    connect_timeout 2\n                    # 重试次数 2次\n                    nb_get_retry 2\n                    # 时间间隔 3s\n                    delay_before_retry 3\n                }\n\n        }\n\n        real_server 192.168.64.132 80 {\n                # 轮询的默认权重配比设置为1\n                weight 1\n                # 设置健康检查\n                TCP_CHECK {\n                    # 检查的80端口\n                    connect_port 80\n                    # 超时时间 2s\n                    connect_timeout 2\n                    # 重试次数 2次\n                    nb_get_retry 2\n                    # 时间间隔 3s\n                    delay_before_retry 3\n                }\n        }\n}\n\n")])])])])]),n._v(" "),t("h2",{attrs:{id:"_2-配置第二台从lvs服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置第二台从lvs服务器"}},[n._v("#")]),n._v(" 2.配置第二台从Lvs服务器")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("Keepalived配置")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("! Configuration File for keepalived\n\nglobal_defs {\n   # 路由id：当前安装keepalived节点主机的标识符，全局唯一标识符\n   router_id LVS_192.168.64.134\n}\n\n\n# 计算机节点\nvrrp_instance VI_1 {\n    # 表示的状态，当前的192.168.64.134的nginx的主节点\n    # 主节点：MASTER,备用机：BACKUP\n    state BACKUP\n    # 当前实例绑定的网卡\n    interface ens33\n    # 保证主备节点一致\n    virtual_router_id 55\n    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER\n    priority 50\n    # 主备之间同步检查的时间间隔，默认1s\n    advert_int 1\n    # 认证授权的密码，防止非法节点的进入\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n\n\n    virtual_ipaddress {\n        192.168.64.120\n    }\n}\n\n# 配置集群地址访问的IP+端口，端口和nginx保持一致，都是80\nvirtual_server  192.168.64.120 80 {\n        # 健康检查的时间，单位：秒\n        delay_loop 6\n        # 配置负载均衡的算法，默认是轮询\n        lb_algo rr\n        # 设置LVS的模式 NAT|TUN|DR\n        lb_kind DR\n        # 设置会话持久化的事件\n        persistence_timeout 10\n        # 协议 -t\n        protocol TCP\n\n        # 负载均衡的真实服务器，也就是nginx节点的具体的真实ip地址\n        real_server 192.168.64.131 80 {\n                # 轮询的默认权重配比设置为1\n                weight 1\n                # 设置健康检查\n                TCP_CHECK {\n                    # 检查的80端口\n                    connect_port 80\n                    # 超时时间 2s\n                    connect_timeout 2\n                    # 重试次数 2次\n                    nb_get_retry 2\n                    # 时间间隔 3s\n                    delay_before_retry 3\n                }\n\n        }\n\n        real_server 192.168.64.132 80 {\n                # 轮询的默认权重配比设置为1\n                weight 1\n                # 设置健康检查\n                TCP_CHECK {\n                    # 检查的80端口\n                    connect_port 80\n                    # 超时时间 2s\n                    connect_timeout 2\n                    # 重试次数 2次\n                    nb_get_retry 2\n                    # 时间间隔 3s\n                    delay_before_retry 3\n                }\n        }\n}\n\n")])])])])]),n._v(" "),t("h2",{attrs:{id:"_3-启动主从的keepalived"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动主从的keepalived"}},[n._v("#")]),n._v(" 3.启动主从的Keepalived")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("# 进去启动目录里\ncd /usr/local/keepalived/sbin\n\n# 启动keepalived\n./keepalived\n")])])]),t("h3",{attrs:{id:"_4-查看lvs情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看lvs情况"}},[n._v("#")]),n._v(" 4.查看Lvs情况")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("# 清除配置的规则（一般不用清除）\nipvsadm -C\n\n# 查看连接情况\nipvsadm -Ln\n\n# 查看轮询情况\nipvsadm -Lnc\n\n# 查看状态\nipvsadm -Ln --stats\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);