(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{217:function(e,n,a){"use strict";a.r(n);var t=a(28),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_4-keepalived配置nginx自动重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-keepalived配置nginx自动重启"}},[e._v("#")]),e._v(" 4.Keepalived配置Nginx自动重启")]),e._v(" "),a("h2",{attrs:{id:"_1-增加nginx重启检测脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-增加nginx重启检测脚本"}},[e._v("#")]),e._v(" 1.增加nginx重启检测脚本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vim /etc/keepalived/check_nginx_alive_or_not.sh\n\n#!/bin/bash\n\nA=`ps -C nginx --no-header |wc -l`\n# 判断nginx是否宕机，如果宕机了，尝试重启\nif [ $A -eq 0 ];then\n    /usr/local/nginx/sbin/nginx\n    # 等待一小会再次检查nginx，如果没有启动成功，则停止keepalived，使其启动备用机\n    sleep 3\n    if [ `ps -C nginx --no-header |wc -l` -eq 0 ];then\n        killall keepalived\n    fi\nfi\n")])])]),a("ul",[a("li",[a("p",[e._v("增加运行权限")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("chmod +x /etc/keepalived/check_nginx_alive_or_not.sh\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"_2-配置keepalived监听nginx脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置keepalived监听nginx脚本"}},[e._v("#")]),e._v(" 2.配置keepalived监听nginx脚本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('vrrp_script check_nginx_alive {\n    script "/etc/keepalived/check_nginx_alive_or_not.sh"\n    interval 2 # 每隔两秒运行上一行脚本\n    weight 10 # 如果脚本运行成功，则升级权重+10\n}\n')])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),a("p",[e._v("这段代码配置在/etc/keepalived/keepalived.conf脚本中")])]),e._v(" "),a("h2",{attrs:{id:"_3-配置vrrp-instance中新增监控的脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置vrrp-instance中新增监控的脚本"}},[e._v("#")]),e._v(" 3.配置vrrp_instance中新增监控的脚本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("track_script {\n        check_nginx_alive   # 追踪 nginx 脚本\n}\n")])])]),a("h2",{attrs:{id:"_4-重启keepalived是的配置文件生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-重启keepalived是的配置文件生效"}},[e._v("#")]),e._v(" 4.重启Keepalived是的配置文件生效")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("systemctl restart keepalived\n")])])]),a("h2",{attrs:{id:"附：keepalived-conf完整配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附：keepalived-conf完整配置"}},[e._v("#")]),e._v(" 附：keepalived.conf完整配置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('global_defs {\n   # 路由id：当前安装keepalived节点主机的标识符，全局唯一标识符\n   router_id keep_192.168.64.131\n}\n\nvrrp_script check_nginx_alive {\n    script "/etc/keepalived/check_nginx_alive_or_not.sh"\n    interval 2 # 每隔两秒运行上一行脚本\n    weight 10 # 如果脚本运行成功，则升级权重+10\n}\n\n# 计算机节点\nvrrp_instance VI_1 {\n    # 表示的状态，当前的192.168.64.131的nginx的主节点\n    # 主节点：MASTER,备用机：BACKUP\n    state MASTER\n    # 当前实例绑定的网卡\n    interface ens33\n    # 保证主备节点一致\n    virtual_router_id 51\n    # 优先级/权重，谁的优先级高，在MASTER挂掉以后，就能成为MASTER\n    priority 100\n    # 主备之间同步检查的时间间隔，默认1s\n    advert_int 1\n    # 认证授权的密码，防止非法节点的进入\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n\n    track_script {\n        check_nginx_alive   # 追踪 nginx 脚本\n    }\n\n    virtual_ipaddress {\n        192.168.64.121\n    }\n}\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);